import discord
from discord.ext import commands
import aiohttp
from datetime import datetime
import pytz
import os
import re

OPENWEATHER_KEY = os.getenv("OPENWEATHER_KEY")

class TimeWeatherCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def get_weather(self, city):
        if not OPENWEATHER_KEY:
            return None

        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_KEY}&units=metric&lang=bg"

        async with aiohttp.ClientSession() as session:
            async with session.get(url) as resp:
                if resp.status != 200:
                    return None
                return await resp.json()

    async def build_weather_embed(self, city):
        data = await self.get_weather(city)
        if not data or data.get("cod") != 200:
            return None

        weather_desc = data["weather"][0]["description"].capitalize()
        temp = data["main"]["temp"]
        feels_like = data["main"]["feels_like"]
        humidity = data["main"]["humidity"]
        wind_speed = data["wind"]["speed"]

        embed = discord.Embed(
            title=f"üå§ –í—Ä–µ–º–µ—Ç–æ –≤ {city.title()}",
            description=f"{weather_desc}, {temp}¬∞C (—É—Å–µ—â–∞ —Å–µ –∫–∞—Ç–æ {feels_like}¬∞C)",
            color=0x2ECC71
        )
        embed.add_field(name="üíß –í–ª–∞–∂–Ω–æ—Å—Ç", value=f"{humidity}%", inline=True)
        embed.add_field(name="üí® –í—è—Ç—ä—Ä", value=f"{wind_speed} m/s", inline=True)
        embed.set_footer(text="–î–∞–Ω–Ω–∏ –æ—Ç OpenWeather")

        return embed

    async def get_time_for_city(self, city):
        tz_map = {
            "—Å–æ—Ñ–∏—è": "Europe/Sofia",
            "–ø–ª–æ–≤–¥–∏–≤": "Europe/Sofia",
            "–≤–∞—Ä–Ω–∞": "Europe/Sofia",
            "–±—É—Ä–≥–∞—Å": "Europe/Sofia",
            "–ª–æ–Ω–¥–æ–Ω": "Europe/London",
            "–Ω—é –π–æ—Ä–∫": "America/New_York",
            "–ª–æ—Å –∞–Ω–¥–∂–µ–ª–∏—Å": "America/Los_Angeles",
            "–ø–∞—Ä–∏–∂": "Europe/Paris",
            "–±–µ—Ä–ª–∏–Ω": "Europe/Berlin",
        }

        tz = tz_map.get(city.lower())
        if not tz:
            return None

        now = datetime.now(pytz.timezone(tz))
        return now.strftime("%H:%M, %d.%m.%Y")

    # ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∑–∞ –≤—Ä–µ–º–µ—Ç–æ
    @commands.command(name="–≤—Ä–µ–º–µ—Ç–æ")
    async def cmd_weather(self, ctx, *, city: str):
        embed = await self.build_weather_embed(city)
        if embed:
            await ctx.send(embed=embed)
        else:
            await ctx.send("‚ö†Ô∏è –ù–µ —É—Å–ø—è—Ö –¥–∞ –Ω–∞–º–µ—Ä—è –≤—Ä–µ–º–µ—Ç–æ –∑–∞ —Ç–æ–∑–∏ –≥—Ä–∞–¥.")

    # ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∑–∞ —á–∞—Å–∞
    @commands.command(name="—á–∞—Å")
    async def cmd_time(self, ctx, *, city: str):
        time_str = await self.get_time_for_city(city)
        if time_str:
            await ctx.send(f"‚è∞ –í **{city.title()}** –µ {time_str}.")
        else:
            await ctx.send("‚ö†Ô∏è –ù–µ —É—Å–ø—è—Ö –¥–∞ –Ω–∞–º–µ—Ä—è –≤—Ä–µ–º–µ—Ç–æ –∑–∞ —Ç–æ–∑–∏ –≥—Ä–∞–¥.")

    # ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä –ø—Ä–∏ –≤—ä–ø—Ä–æ—Å
    @commands.Cog.listener()
    async def on_message(self, message: discord.Message):
        if message.author.bot:
            return

        weather_match = re.search(r"(?:–≤—Ä–µ–º–µ—Ç–æ|–∫–∞–∫–≤–æ –µ –≤—Ä–µ–º–µ—Ç–æ).*–≤\s+([–ê-–Ø–∞-—èA-Za-z\s\-]+)", message.content, re.IGNORECASE)
        time_match = re.search(r"(?:—á–∞—Å—ä—Ç|–∫–æ–ª–∫–æ –µ —á–∞—Å—ä—Ç).*–≤\s+([–ê-–Ø–∞-—èA-Za-z\s\-]+)", message.content, re.IGNORECASE)

        if weather_match:
            city = weather_match.group(1).strip()
            embed = await self.build_weather_embed(city)
            if embed:
                await message.channel.send(embed=embed)
                message.is_handled = True
            return

        if time_match:
            city = time_match.group(1).strip()
            time_str = await self.get_time_for_city(city)
            if time_str:
                await message.channel.send(f"‚è∞ –í **{city.title()}** –µ {time_str}.")
                message.is_handled = True
            return

async def setup(bot):
    await bot.add_cog(TimeWeatherCog(bot))



































