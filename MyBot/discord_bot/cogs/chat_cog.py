import discord
from discord.ext import commands
import asyncio
import random
import re

class ChatCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.greetings = [
            "–ó–¥—Ä–∞—Å—Ç–∏, –∫–∞–∫ —Å–∏ –¥–Ω–µ—Å? üòä",
            "–•–µ–π, –∫–∞–∫ –≤—ä—Ä–≤–∏ –¥–µ–Ω—è—Ç —Ç–∏? üòé",
            "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫–≤–æ –Ω–æ–≤–æ –æ–∫–æ–ª–æ —Ç–µ–±? üåü",
            "–•–µ–π, —Ä–∞–¥–≤–∞–º —Å–µ –¥–∞ —Ç–µ –≤–∏–¥—è! ü§ó",
            "–ó–¥—Ä–∞–≤–µ–π! –ö–∞–∫ –º–∏–Ω–∞–≤–∞ –¥–µ–Ω—è—Ç —Ç–∏? ‚òÄÔ∏è",
        ]

    def is_bulgarian(self, text: str) -> bool:
        return bool(re.search(r"[–ê-–Ø–∞-—è]", text))

    def translate_to_bg(self, text: str) -> str:
        response = self.bot.client_ai.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–ü—Ä–µ–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω –±—ä–ª–≥–∞—Ä—Å–∫–∏ –µ–∑–∏–∫."},
                {"role": "user", "content": text}
            ]
        )
        return response.choices[0].message.content.strip()

    @commands.command(name="–ø–∏—Ç–∞–π", help="ü§ñ –ó–∞–¥–∞–π –≤—ä–ø—Ä–æ—Å –Ω–∞ AI –±–æ—Ç–∞")
    async def chat(self, ctx, *, message: str):
        thinking_msg = await ctx.send("ü§î –ú–∏—Å–ª—è –ø–æ –≤—ä–ø—Ä–æ—Å–∞...")

        try:
            loop = asyncio.get_event_loop()

            response = await loop.run_in_executor(
                None,
                lambda: self.bot.client_ai.chat.completions.create(
                    model="gpt-4o-mini",
                    messages=[
                        {
                            "role": "system",
                            "content": (
                                "–¢–∏ —Å–∏ –≤–µ—Å–µ–ª Discord –∞—Å–∏—Å—Ç–µ–Ω—Ç. "
                                "–û—Ç–≥–æ–≤–∞—Ä—è–π –≤–∏–Ω–∞–≥–∏ –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –µ–∑–∏–∫, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –Ω–∞ –∫–∞–∫—ä–≤ –µ–∑–∏–∫ —Ç–∏ –ø–∏—à–∞—Ç. "
                                "–ê–∫–æ –ø–æ–ª—É—á–∏—à —á—É–∂–¥ –µ–∑–∏–∫ ‚Äì –ø—Ä–µ–≤–µ–¥–∏ –∏ –æ—Ç–≥–æ–≤–æ—Ä–∏ –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏. "
                                "–û—Ç–≥–æ–≤–∞—Ä—è–π –ø—Ä–∏—è—Ç–µ–ª—Å–∫–∏, —É–≤–µ—Ä–µ–Ω–æ –∏ –∫—Ä–∞—Ç–∫–æ. "
                                "–ò–∑–ø–æ–ª–∑–≤–∞–π —Ä–∞–∑–ª–∏—á–Ω–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –∑–∞ –¥–∞ –Ω–µ –∑–≤—É—á–∏—à –µ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω–æ."
                            )
                        },
                        {"role": "user", "content": message}
                    ]
                )
            )

            reply = response.choices[0].message.content.strip()

            # –ê–∫–æ –æ—Ç–≥–æ–≤–æ—Ä—ä—Ç –Ω–µ –µ –Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–∞ ‚Üí –ø—Ä–µ–≤–µ–∂–¥–∞–º–µ
            if not self.is_bulgarian(reply):
                reply = self.translate_to_bg(reply)

            # –ê–∫–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–¥—Ä–∞–≤—è–≤–∞ ‚Üí –¥–∞–π —Å–ª—É—á–∞–π–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            if message.lower() in ["–∑–¥—Ä–∞–≤–µ–π", "–∑–¥—Ä–∞—Å—Ç–∏", "–ø—Ä–∏–≤–µ—Ç", "hello", "hi", "hey"]:
                reply = random.choice(self.greetings)

            await thinking_msg.edit(content=reply)

        except Exception as e:
            await thinking_msg.edit(content="‚ö†Ô∏è –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞—Ç–∞ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞.")
            print(f"[ChatCog] Error: {e}")

async def setup(bot):
    await bot.add_cog(ChatCog(bot))




































